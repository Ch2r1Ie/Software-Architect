classDiagram
    class Ticket {
        -ID: string
        -ConcertID: string
        -UserID: string
        -Price: float64
    }

    class TicketService {
        <<interface>>
        +PurchaseTicket(concertID: string, userID: string) Ticket
        +CancelTicket(ticketID: string) error
    }

    class TicketRepository {
        <<interface>>
        +Save(ticket: Ticket) error
        +FindByID(id: string) Ticket
        +Delete(id: string) error
    }

    class TicketRepositoryImpl {
        -db: *sql.DB
        +Save(ticket: Ticket) error
        +FindByID(id: string) Ticket
        +Delete(id: string) error
    }

    class TicketingKernel {
        -plugins: map[string]Plugin
        +LoadPlugin(name: string, path: string) error
        +ExecutePlugin(name: string) error
    }

    class Plugin {
        <<interface>>
        +Execute() error
    }

    class Pipeline {
        -filters: []TicketProcessor
        +AddFilter(filter: TicketProcessor)
        +Process(ticket: Ticket) error
    }

    class TicketProcessor {
        <<interface>>
        +Process(ticket: Ticket) error
    }

    class TicketBroker {
        -ticketService: TicketService
        -eventBus: EventBus
        -requests: chan TicketRequest
        -responses: chan TicketResponse
        +RequestTicketOperation(request: TicketRequest) TicketResponse
    }

    class TicketSpace {
        -tickets: map[string]*Ticket
        +Write(ticket: Ticket) error
        +Read(id: string) Ticket
        +Delete(id: string) error
    }

    class TicketPurchaseSaga {
        -steps: []SagaStep
        +AddStep(step: SagaStep)
        +Execute() error
    }

    class SagaStep {
        <<interface>>
        +Execute() error
        +Compensate() error
    }

    class TicketNode {
        -ID: string
        -TicketSpace: *TicketSpace
        -Peers: map[string]*TicketNode
        -EventBus: EventBus
        +AddPeer(peer: TicketNode)
        +PurchaseTicket(concertID: string, userID: string) Ticket
        +CancelTicket(ticketID: string) error
    }

    TicketRepositoryImpl ..|> TicketRepository
    TicketingKernel --> Plugin
    Pipeline --> TicketProcessor
    TicketBroker --> TicketService
    TicketBroker --> EventBus
    TicketPurchaseSaga --> SagaStep
    TicketNode --> TicketSpace
    TicketNode --> EventBus
