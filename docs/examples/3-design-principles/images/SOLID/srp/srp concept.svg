<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 600">
  <style>
    .title { font: bold 24px sans-serif; }
    .subtitle { font: bold 18px sans-serif; }
    .text { font: 14px sans-serif; }
    .code { font: 12px monospace; fill: #333; }
    .box { fill: #f0f0f0; stroke: #333; stroke-width: 2; }
    .highlight { fill: #e6f3ff; }
    .violation { fill: #ffe6e6; }
    .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
  </style>
  
  <!-- Title -->
  <text x="400" y="30" text-anchor="middle" class="title">Single Responsibility Principle (SRP)</text>
  
  <!-- Definition -->
  <rect x="50" y="50" width="700" height="40" class="box"/>
  <text x="400" y="75" text-anchor="middle" class="text">
    "A class should have one, and only one, reason to change."
  </text>
  
  <!-- Key Concepts -->
  <text x="50" y="120" class="subtitle">Key Concepts:</text>
  
  <rect x="50" y="130" width="700" height="100" class="box highlight"/>
  <text x="60" y="150" class="text">• Each class should focus on doing one thing well</text>
  <text x="60" y="170" class="text">• A single responsibility is a single reason for the class to change</text>
  <text x="60" y="190" class="text">• Separate concerns into different classes</text>
  <text x="60" y="210" class="text">• Promotes high cohesion and low coupling</text>
  
  <!-- Example -->
  <text x="50" y="260" class="subtitle">Example: Concert Ticket System</text>
  
  <!-- Violating SRP -->
  <rect x="50" y="280" width="350" height="230" class="box violation"/>
  <text x="200" y="300" text-anchor="middle" class="subtitle">Violating SRP</text>
  <text x="60" y="320" class="code">class ConcertTicket {</text>
  <text x="70" y="340" class="code">  public void ReserveTicket() { ... }</text>
  <text x="70" y="360" class="code">  public void CancelReservation() { ... }</text>
  <text x="70" y="380" class="code">  public decimal CalculatePrice() { ... }</text>
  <text x="70" y="400" class="code">  public void PrintTicket() { ... }</text>
  <text x="70" y="420" class="code">  public void SaveToDatabase() { ... }</text>
  <text x="70" y="440" class="code">  public void SendConfirmationEmail() { ... }</text>
  <text x="60" y="460" class="code">  // Many responsibilities in one class</text>
  <text x="60" y="480" class="code">}</text>
  
  <!-- Following SRP -->
  <rect x="450" y="280" width="300" height="230" class="box highlight"/>
  <text x="600" y="300" text-anchor="middle" class="subtitle">Following SRP</text>
  <text x="460" y="320" class="code">class ConcertTicket {</text>
  <text x="470" y="340" class="code">  public int TicketId { get; set; }</text>
  <text x="470" y="360" class="code">  public decimal Price { get; set; }</text>
  <text x="470" y="380" class="code">  // Only ticket-specific properties</text>
  <text x="460" y="400" class="code">}</text>
  <text x="460" y="420" class="code">class TicketReservation { ... }</text>
  <text x="460" y="440" class="code">class PriceCalculator { ... }</text>
  <text x="460" y="460" class="code">class TicketPrinter { ... }</text>
  <text x="460" y="480" class="code">class TicketDatabase { ... }</text>
  <text x="460" y="500" class="code">class EmailService { ... }</text>
  
  <!-- Arrow -->
  <path d="M350 390 L450 390" class="arrow"/>
  
  <!-- Benefits -->
  <text x="50" y="540" class="subtitle">Benefits of SRP:</text>
  <text x="60" y="560" class="text">• Improved code organization and readability</text>
  <text x="60" y="580" class="text">• Easier to maintain and modify individual components</text>
  <text x="450" y="560" class="text">• Enhanced reusability of classes</text>
  <text x="450" y="580" class="text">• Simplified testing and debugging</text>
  
  <!-- Arrowhead marker -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" />
    </marker>
  </defs>
</svg>