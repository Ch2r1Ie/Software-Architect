<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 850 720">
  <style>
    .title { font: bold 24px sans-serif; }
    .subtitle { font: bold 18px sans-serif; }
    .text { font: 14px sans-serif; }
    .code { font: 12px monospace; fill: #333; }
    .box { fill: #f0f0f0; stroke: #333; stroke-width: 2; }
    .highlight { fill: #e6f3ff; }
    .violation { fill: #ffe6e6; }
    .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
  </style>
  
  <!-- Title -->
  <text x="400" y="30" text-anchor="middle" class="title">Separation of Concerns (SoC) Principle</text>
  
  <!-- Definition -->
  <rect x="50" y="50" width="700" height="40" class="box"/>
  <text x="400" y="75" text-anchor="middle" class="text">
    "Separating a computer program into distinct sections, each addressing a separate concern."
  </text>
  
  <!-- Key Concepts -->
  <text x="50" y="120" class="subtitle">Key Concepts:</text>
  
  <rect x="50" y="130" width="700" height="100" class="box highlight"/>
  <text x="60" y="150" class="text">• Divide your program into distinct features with as little overlap as possible</text>
  <text x="60" y="170" class="text">• Each section of your program should address a separate concern</text>
  <text x="60" y="190" class="text">• Improve maintainability, reusability, and flexibility of your code</text>
  <text x="60" y="210" class="text">• Reduce the impact of changes in one area on other parts of the system</text>
  
  <!-- Example -->
  <text x="50" y="260" class="subtitle">Example: Concert Ticket System</text>
  
  <!-- Violating SoC -->
  <rect x="50" y="280" width="300" height="280" class="box violation"/>
  <text x="200" y="300" text-anchor="middle" class="subtitle">Violating SoC</text>
  <text x="60" y="320" class="code">class ConcertTicket {</text>
  <text x="70" y="340" class="code">  public void BookTicket() {</text>
  <text x="80" y="360" class="code">    // Check availability</text>
  <text x="80" y="380" class="code">    // Process payment</text>
  <text x="80" y="400" class="code">    // Update database</text>
  <text x="80" y="420" class="code">    // Generate ticket</text>
  <text x="80" y="440" class="code">    // Send confirmation email</text>
  <text x="70" y="460" class="code">  }</text>
  <text x="70" y="480" class="code">  public void PrintTicket() { ... }</text>
  <text x="70" y="500" class="code">  public void CancelTicket() { ... }</text>
  <text x="60" y="520" class="code">}</text>
  
  <!-- Following SoC -->
  <rect x="450" y="280" width="300" height="280" class="box highlight"/>
  <text x="600" y="300" text-anchor="middle" class="subtitle">Following SoC</text>
  <text x="460" y="320" class="code">class TicketBookingService {</text>
  <text x="470" y="340" class="code">  public void BookTicket() { ... }</text>
  <text x="460" y="360" class="code">}</text>
  <text x="460" y="380" class="code">class PaymentProcessor {</text>
  <text x="470" y="400" class="code">  public void ProcessPayment() { ... }</text>
  <text x="460" y="420" class="code">}</text>
  <text x="460" y="440" class="code">class TicketGenerator {</text>
  <text x="470" y="460" class="code">  public Ticket GenerateTicket() { ... }</text>
  <text x="460" y="480" class="code">}</text>
  <text x="460" y="500" class="code">class EmailService {</text>
  <text x="470" y="520" class="code">  public void SendConfirmation() { ... }</text>
  <text x="460" y="540" class="code">}</text>
  
  <!-- Arrow -->
  <path d="M350 400 L450 400" class="arrow"/>
  
  <!-- Benefits -->
  <text x="50" y="580" class="subtitle">Benefits of Separation of Concerns:</text>
  <text x="60" y="610" class="text">• Improved code organization and readability</text>
  <text x="60" y="630" class="text">• Enhanced maintainability and scalability</text>
  <text x="350" y="610" class="text">• Easier testing and debugging</text>
  <text x="350" y="630" class="text">• Increased code reusability</text>
  <text x="550" y="610" class="text">• Better collaboration in development teams</text>
  <text x="550" y="630" class="text">• Flexibility to change implementations</text>
  
  <!-- Arrowhead marker -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="0" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" />
    </marker>
  </defs>
</svg>